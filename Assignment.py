# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10f1NSXT_YmxOuITyLkA0A30cqQuNI9Mz
"""

# 1. scrap the data from two e-commerce website & compare the price of product, which seems similar.The compared result should be visualized in any visualization tool.

import requests
from bs4 import BeautifulSoup
import sqlite3
import pandas as pd
import matplotlib.pyplot as plt


# Define URLs for bestbuy and Flipkart (replace with actual product URLs)
bestbuy_url = "https://www.bestbuy.com/site/searchpage.jsp?st=laptops"
flipkart_url = "https://www.flipkart.com/search?q=iphone+15+pro+max"

# Send user-agent headers to avoid getting blocked
headers = {
'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36'
}

# Function to scrape product data
def scrape_product_data(url, product_class, price_class):
  response = requests.get(url, headers=headers)
  soup = BeautifulSoup(response.text, 'html.parser')

  products = soup.find_all('span', class_=product_class) # Adjust based on actual HTML structure
  prices = soup.find_all('span', class_=price_class) # Adjust based on actual HTML structure

  product_data = []
  for product, price in zip(products, prices):
    product_name = product.text.strip()
    product_price = float(price.text.strip().replace('â‚¹', '').replace(',', '')) # Convert to float after removing currency symbol and commas
    product_data.append((product_name, product_price))

  return product_data

# Scrape data from both websites (HTML structure placeholders)
bestbuy_product_class = 'c-carousel-list' # Example class for product names on bestbuy
bestbuy_price_class = 'a-price-whole' # Example class for prices on bestbuy

flipkart_product_class = '_4rR01T' # Example class for product names on Flipkart
flipkart_price_class = '_30jeq3' # Example class for prices on Flipkart

data_bestbuy = scrape_product_data(bestbuy_url, bestbuy_product_class, bestbuy_price_class)
data_flipkart = scrape_product_data(flipkart_url, flipkart_product_class, flipkart_price_class)

# Convert scraped data to DataFrame
df_bestbuy = pd.DataFrame(data_bestbuy, columns=['Product', 'bestbuy_Price'])
df_flipkart = pd.DataFrame(data_flipkart, columns=['Product', 'Flipkart_Price'])

# Merge dataframes on Product
df = pd.merge(df_bestbuy, df_flipkart, on='Product')

# Plot the data
plt.figure(figsize=(10, 5))
plt.bar(df_bestbuy['Product'], df_bestbuy['bestbuy_Price'], color='blue', alpha=0.7, label='bestbuy')
plt.bar(df_flipkart['Product'], df_flipkart['Flipkart_Price'], color='green', alpha=0.7, label='Flipkart')
plt.title('Product Price Comparison')
plt.xlabel('Product')
plt.ylabel('Price')
plt.xticks(rotation=90)
plt.legend()
plt.show()

# 2.Tabulate same data in two different tables, using SQl database.
from sqlalchemy import create_engine

# Connect to the SQL Database
engine = create_engine('sqlite:///my_database.db') # Adjust connection string for other databases

# Create tables from DataFrames
df_bestbuy.to_sql('bestbuy_products', con=engine, if_exists='replace', index=False)
df_flipkart.to_sql('flipkart_products', con=engine, if_exists='replace', index=False)

print("Data has been inserted into the database.")